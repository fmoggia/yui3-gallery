{
    "project": {},
    "files": {
        "js/paginator-view.js": {
            "name": "js/paginator-view.js",
            "modules": {
                "paginator-view": 1
            },
            "classes": {
                "Y.PaginatorModel": 1,
                "Y.PaginatorView": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "paginator-view": {
            "name": "paginator-view",
            "submodules": {},
            "classes": {
                "Y.PaginatorModel": 1,
                "Y.PaginatorView": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "js/paginator-view.js",
            "line": 271,
            "version": "1.0.1",
            "author": "Todd Smith",
            "since": "3.6.0"
        }
    },
    "classes": {
        "Y.PaginatorModel": {
            "name": "Y.PaginatorModel",
            "shortname": "Y.PaginatorModel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "paginator-view",
            "namespace": "",
            "file": "js/paginator-view.js",
            "line": 9,
            "description": "A Model infrastructure element to be used to track pagination state of a paged set of control elements.\nFor example, can be used to track the pagination status of a DataTable where the user selects limited\nportions for display, against a larger data set.\n\nThe primary tools for maintaining \"page state\" is through the following attributes;\n   <br/>&nbsp;&nbsp;&nbsp;    `totalItems` &nbsp;&nbsp;  Which represents the \"Total count of items of interest\" (See attribute [totalItems](#attr_totalItems) )\n    <br/>&nbsp;&nbsp;&nbsp;   `itemsPerPage` &nbsp;&nbsp; Which represents the \"Count of items on each page\" (See attribute [itemsPerPage](#attr_itemsPerPage) )\n    <br/>&nbsp;&nbsp;&nbsp;   `page` &nbsp;&nbsp;  The currently selected page, within all pages required that encompass the above two attributes (See attribute [page](#attr_page) )\n\nExample;\n\n       // setup a paginator model for 500 'foo' items, paged at 50 per page ...\n       var pagModel = new Y.PaginatorModel({\n           totalItems:     500,\n          itemsPerPage:   50\n       });\n       pagModel.get('totalPages');  // returns 10\n\n       pagModel.set('page',3);\n       pagModel.getAttrs(['lastPage','page','itemIndexStart','itemIndexEnd']);\n       // returns ... { lastPage:1, page:3, itemIndexStart:100, itemIndexEnd:149 }",
            "extends": "Y.Model",
            "version": "1.0.1",
            "since": "3.6.0"
        },
        "Y.PaginatorView": {
            "name": "Y.PaginatorView",
            "shortname": "Y.PaginatorView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "paginator-view",
            "namespace": "",
            "file": "js/paginator-view.js",
            "line": 271,
            "description": "A View infrastructure element to serve as a User Interface for the tracking of \"pagination state\" of\na set of data.  This PaginatorView was specifically designed to work with PaginatorModel\nserving as the \"model\" (in MVC parlance), although would work with any user-supplied model under conditions\nthat similar attributes and attribute changes are mapped.\n\nThe PaginatorView was originally designed to function with DataTable (See Y.DataTable.Paginator) for managing the UI\nand page state of paginated tables, although it isn't necessarily limited to that application.  This View responds to\nthe model's attribute `xxxxChange` events and updates the UI accordingly.\n\nThe PaginatorView utilizes an HTML template concept, where certain replaceable tokens uniquely related to this view,\nin addition to all of the model's attributes, can be defined for positioning within the Paginator container.\n\n\nExample;\n\n       // Setup a paginator view based on a data model for 500 items, paged at 50 per page ...\n       var pagView = new Y.PaginatorView(\n           container:  '#myPagDIV',\n           paginatorTemplate:  '#script-tmpl-mypag',\n           model:  new Y.PaginatorModel({\n               totalItems:     500,\n               itemsPerPage:   50\n           })\n       }).render();",
            "extends": "Y.View",
            "version": "1.0.1",
            "since": "3.6.0"
        }
    },
    "classitems": [
        {
            "file": "js/paginator-view.js",
            "line": 40,
            "description": "Placeholder for calculated # of pages required",
            "itemtype": "property",
            "name": "_npages",
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "Y.PaginatorModel",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 49,
            "description": "Placeholder for Event subscribers created by this model, kept for detaching on destroy.",
            "itemtype": "property",
            "name": "_subscr",
            "type": "{Array}",
            "access": "protected",
            "tagname": "",
            "class": "Y.PaginatorModel",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 58,
            "description": "Creates self-listeners to recalculate paginator settings on items / itemsPerPage\n changes.  Also sets listener to track 'lastPage' changes.",
            "itemtype": "method",
            "name": "initializer",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "this"
            },
            "class": "Y.PaginatorModel",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 79,
            "description": "Default destructor method, cleans up the listeners that were created.",
            "itemtype": "method",
            "name": "destructor",
            "access": "private",
            "tagname": "",
            "class": "Y.PaginatorModel",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 92,
            "description": "Method responds to changes to \"page\" (via `pageChange` attribute change), validates the change compared to the\n current paginator settings, and stores the prior page in \"lastPage\".\n\nIf a page change is invalid (i.e. less than 1, non-numeric or greater than `totalPages` the change is prevented.",
            "itemtype": "method",
            "name": "_changePage",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventHandle"
                }
            ],
            "return": {
                "description": "Nothing"
            },
            "access": "private",
            "tagname": "",
            "class": "Y.PaginatorModel",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 116,
            "description": "Method to calculate the current paginator settings, specifically the\n number of pages required, including a modulus calc for extra records requiring a final page.\n\nThis method resets the `page` to 1 (first page) upon completion.",
            "itemtype": "method",
            "name": "_recalcPagnParams",
            "return": {
                "description": "Indicating the \"success\" or failure of recalculating the pagination state.",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "Y.PaginatorModel",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 141,
            "description": "Getter for returning the start index for the current `page`",
            "itemtype": "method",
            "name": "_getItemIndexStart",
            "return": {
                "description": "Index of first item on the current `page`",
                "type": "Integer"
            },
            "access": "private",
            "tagname": "",
            "class": "Y.PaginatorModel",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 151,
            "description": "Getter for returning the ending index for the current `page`",
            "itemtype": "method",
            "name": "_getItemIndexEnd",
            "return": {
                "description": "Index of the last item on the current `page`",
                "type": "Integer"
            },
            "access": "private",
            "tagname": "",
            "class": "Y.PaginatorModel",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 166,
            "description": "Total number of items used by this paginator-model.",
            "itemtype": "attribute",
            "name": "totalItems",
            "type": "{Integer}",
            "default": "null",
            "class": "Y.PaginatorModel",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 178,
            "description": "Number of items per page for this paginator.",
            "itemtype": "attribute",
            "name": "itemsPerPage",
            "type": "{Integer}",
            "default": "null",
            "class": "Y.PaginatorModel",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 190,
            "description": "The current page selected for this paginator-model.\n\nThis is intended as the **primary** change parameter to be .set() by the user, for interacting\nwith the Paginator Model.",
            "itemtype": "attribute",
            "name": "page",
            "type": "{Integer}",
            "default": "1",
            "class": "Y.PaginatorModel",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 205,
            "description": "The last active `page` that was selected, this is populated by a `pageChange` listener on the Model.",
            "itemtype": "attribute",
            "name": "lastPage",
            "type": "{Integer}",
            "default": "null",
            "class": "Y.PaginatorModel",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 217,
            "description": "The total number of pages required to complete this pagination state (based upon `totalItems` and\n`itemsPerPage`, specifically).\n\nThis attribute is set / maintained by the method [_recalcPagnParams](#method__recalcPagnParams) and\nshouldn't be set by the user.",
            "itemtype": "attribute",
            "name": "totalPages",
            "type": "Integer",
            "default": "null",
            "class": "Y.PaginatorModel",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 234,
            "description": "The index for the starting item on the current `page` within the pagination state.\n\nThis attribute is calculated on the fly in a getter method [_getItemIndexStart](#method__getItemIndexStart) and\nshould not be \"set\" by the user, as it will be disregarded.",
            "itemtype": "attribute",
            "name": "itemIndexStart",
            "type": "Integer",
            "default": "null",
            "class": "Y.PaginatorModel",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 250,
            "description": "The index for the ending item on the current `page` within the pagination state.\n\nThis attribute is calculated on the fly in a getter method [_getItemIndexEnd](#method__getItemIndexEnd) and\nshould not be \"set\" by the user, as it will be disregarded.",
            "itemtype": "attribute",
            "name": "itemIndexEnd",
            "type": "Integer",
            "default": "null",
            "class": "Y.PaginatorModel",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 308,
            "description": "Default HTML content to be used as basis for Paginator.  This default is only used if the paginatorTemplate\nattribute is unused OR the container does not contain the HTML template.\n\nThe paginator HTML content includes replacement tokens throughout.\n\nThe DEFAULT setting is;\n\n        <a href=\"#\" data-pglink=\"first\" class=\"{pageLinkClass}\" title=\"First Page\">First</a> |\n        <a href=\"#\" data-pglink=\"prev\" class=\"{pageLinkClass}\" title=\"Prior Page\">Prev</a> |\n        {pageLinks}\n        | <a href=\"#\" data-pglink=\"next\" class=\"{pageLinkClass}\" title=\"Next Page\">Next</a> |\n        <a href=\"#\" data-pglink=\"last\" class=\"{pageLinkClass}\" title=\"Last Page\">Last</a>",
            "itemtype": "property",
            "name": "TMPL_PAGINATOR",
            "type": "String",
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 332,
            "description": "Default HTML content that will be used to prepare individual links within the Paginator and inserted\nat the location denoted **{pageLinks}** replacement token in the template.\n\nThe DEFAULT setting is;\n\n       <a href=\"#\" data-pglink=\"{page}\" class=\"{pageLinkClass}\" title=\"Page {page}\">{page}</a>",
            "itemtype": "property",
            "name": "TMPL_LINK",
            "type": "{String}",
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 350,
            "description": "Default HTML template for the Rows Per Page SELECT box signified by the **{selectRowsPerPage}** replacement toke\nwithin the paginator template.\n\nThe DEFAULT setting is;\n\n       <select class=\"{selectRPPClass}\"></select>",
            "itemtype": "property",
            "name": "TMPL_selectRPP",
            "type": "String",
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 363,
            "description": "Default HTML template for the Page SELECT box signified by the **{selectPage}** replacement token with the\npaginator template.\n\nThe DEFAULT setting is;\n\n       <select class=\"{selectPageClass}\"></select>",
            "itemtype": "property",
            "name": "TMPL_selectPage",
            "type": "String",
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 376,
            "description": "Default HTML template for the \"Rows Per Page\" INPUT[text] control signified by the **{inputRowsPerPage}** replacement\ntoken within the paginator template.\n\nThe DEFAULT setting is;\n\n       <input type=\"text\" class=\"{inputRPPClass}\" value=\"{itemsPerPage}\"/>",
            "itemtype": "property",
            "name": "TMPL_inputRPP",
            "type": "String",
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 389,
            "description": "Default HTML template for the \"Page\" INPUT[text] control signified by the **{inputPage}** replacement token with the\npaginator template.\n\nThe DEFAULT setting is;\n\n       <input type=\"text\" class=\"{inputPageClass}\" value=\"{page}\"/>",
            "itemtype": "property",
            "name": "TMPL_inputPage",
            "type": "String",
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 403,
            "description": "A public property, provided as a convenience property, equivalent to the \"model\" attribute.",
            "itemtype": "property",
            "name": "model",
            "type": "Y.PaginatorModel",
            "default": "null",
            "access": "public",
            "tagname": "",
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 415,
            "description": "Placeholder property to store the initial container HTML for used later in the\n render method.  This property is populated by the View initializer.",
            "itemtype": "property",
            "name": "_pagHTML",
            "access": "protected",
            "tagname": "",
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 424,
            "description": "Class placeholders for UI elements",
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 439,
            "description": "Holder for Event subscribers created by this View, saved so they can be cleaned up later.",
            "itemtype": "property",
            "name": "_subscr",
            "type": "Array",
            "default": "null",
            "access": "protected",
            "tagname": "",
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 450,
            "description": "Helper function, because I was too lazy to figure out how to get widget getClassName working",
            "itemtype": "method",
            "name": "_myClassName",
            "params": [
                {
                    "name": "String",
                    "description": "variable number of strings, to be concatenated"
                }
            ],
            "return": {
                "description": "String"
            },
            "access": "private",
            "tagname": "",
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 468,
            "description": "Initializer sets up classes and the initial container and HTML templating for this View.",
            "itemtype": "method",
            "name": "initializer",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "this"
            },
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 525,
            "description": "Setup listeners on this View, specifically on all UI elements and\n \"most importantly\", listen to \"pageChange\" on the underlying Model.",
            "itemtype": "method",
            "name": "_bindUI",
            "return": {
                "description": "this"
            },
            "access": "private",
            "tagname": "",
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 563,
            "description": "Default destructor method, cleans up the listeners that were created and\n cleans up the view contents.",
            "itemtype": "method",
            "name": "destructor",
            "access": "private",
            "tagname": "",
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 578,
            "description": "Renders the current settings of the Paginator using the supplied HTML content from the\nfor the paginator template and Y.Lang.sub for replacement of tokens and of Model attributes.\n\nNOTE: The render method is not called on every page \"click\", but is called if the Model changes\n\"totalItems\" or \"itemsPerPage\".\n\nThis method fires the \"render\" event, for View listeners.",
            "itemtype": "method",
            "name": "render",
            "access": "public",
            "tagname": "",
            "return": {
                "description": "this"
            },
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 666,
            "description": "Main handler that accomodates Page changes, updates visual cues for highlighting\n the selected page link and the active Page selector link list.\n\nThis method also fires the View's \"pageChange\" event.\n\nNOTE: This method is *private* because page changes should be made by the user at\nthe Model level (Model.set('page',...) and not using the _processPageChange method.",
            "itemtype": "method",
            "name": "_processPageChange",
            "params": [
                {
                    "name": "cpage",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 772,
            "description": "Helper method to calculate offset either side of Selected Page link\n for abbreviated Page List.\n\n Called by _processPageChange",
            "itemtype": "method",
            "name": "_calcOffset",
            "params": [
                {
                    "name": "cpage",
                    "description": "Current page number",
                    "type": "Integer"
                },
                {
                    "name": "offset",
                    "description": "Number of links both sides of page number to return for (usually 1)",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "containing left {Integer} and right {Integer} properties",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 792,
            "description": "Method that toggles the visibility of Page Link selector fields based upon\ntheir data-pglink attribute setting.\n\n Called by _processPageChange",
            "itemtype": "method",
            "name": "_disablePageSelector",
            "params": [
                {
                    "name": "linkSel",
                    "description": ""
                },
                {
                    "name": "visible",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 823,
            "description": "Setter for the \"model\" attribute, that for convenience also sets a public property to this View.",
            "itemtype": "method",
            "name": "_setModel",
            "params": [
                {
                    "name": "val",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "access": "private",
            "tagname": "",
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 838,
            "description": "Handler responds to Model's `pageChange` event\n\n Listener set in _bindUI",
            "itemtype": "method",
            "name": "_modelPageChange",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventHandle"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 853,
            "description": "Handler responds to Model's `itemsPerPageChange` event\n\n Listener set in _bindUI",
            "itemtype": "method",
            "name": "_modelStateChange",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventHandle"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 868,
            "description": "Method fired after the Paginator View is rendered,\n  so that the SELECT[rowsPerPage] control can be updated\n\n Listener set in _bindUI",
            "itemtype": "method",
            "name": "_updateRPPSelect",
            "access": "private",
            "tagname": "",
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 916,
            "description": "Method that responds to changes in the SELECT box for \"page\"",
            "itemtype": "method",
            "name": "_updatePageSelect",
            "access": "private",
            "tagname": "",
            "beta": 1,
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 934,
            "description": "Handler responding to INPUT[text] box page change.\n\nListener set in _bindUI",
            "itemtype": "method",
            "name": "_inputChangePage",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventHandle"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 955,
            "description": "Handler responding to a Page Selector \"click\" event.  The clicked Node is\nreviewed for its data-pglink=\"\" setting, and processed from that.\n\nChanged page is then sent back to the Model, which reprocesses the\n paginator settings (i.e. indices) and fires a `pageChange` event.\n\n Listener set in _bindUI",
            "itemtype": "method",
            "name": "_clickChangePage",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventHandle"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 1002,
            "description": "Handler that responds to SELECT changes for no. of rows per page\n\nListener set in _bindUI",
            "itemtype": "method",
            "name": "_selectChangeRowOptions",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventHandle"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 1022,
            "description": "Method to sync the container for the paginator View with the underlying DataTable\n 'table' element.\n\n Unfortunately, there isn't a distinct, definitive 'render' complete event due to\n  DT's complex rendering, so I use a timer function to attempt a resize.",
            "itemtype": "method",
            "name": "_resizePaginator",
            "access": "private",
            "tagname": "",
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 1040,
            "description": "Method to adjust the CSS width of the paginator container and set it to the\n width of the underlying DT.",
            "itemtype": "method",
            "name": "_syncPaginatorSize",
            "return": {
                "description": "Boolean if success"
            },
            "access": "private",
            "tagname": "",
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 1059,
            "description": "The default set of attributes which will be available for instances of this class",
            "itemtype": "property",
            "name": "ATTRS",
            "type": "Object",
            "static": 1,
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 1068,
            "description": "The base PaginatorModel that serves as data / change provider for this View.",
            "example": [
                "\n     paginator:  new Y.PaginatorModel({\n         itemsPerPage:  250\n     }),\n     OR\n \tpaginator:  myPagModel // where myPagModel is an instance previously created ..."
            ],
            "itemtype": "attribute",
            "name": "model",
            "default": "null",
            "type": "{Y.PaginatorModel}",
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 1088,
            "description": "The container holder for the contents of this View.  Can be entered either as\na Y.Node instance or as a DOM \"id\" attribute (if prepended by \"#\").",
            "example": [
                "\n      container: Y.one(\"#myDiv\"),\n      OR\n      container: \"#myDiv\"\n\nNOTE: If the container node contains HTML <b>it will be used as the paginatorTemplate</b>"
            ],
            "itemtype": "attribute",
            "name": "container",
            "default": "null",
            "type": "{Node|String}",
            "required": 1,
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 1109,
            "description": "An array that will be used to populate the rows per page SELECT box ( using string replacement \"{selectRowsPerPage}\" or\nclass selector \"yui3-pagview-select-rowsperpage\" ).",
            "itemtype": "attribute",
            "name": "pageOptions",
            "type": "{Array}",
            "default": "[ 10, 20, 'All' ]",
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 1122,
            "description": "A string that defines the Paginator HTML contents.  Can either be entered as a {String} including replacement parameters\nor as a {Node} instance whose contents will be read via .getHTML() or a DOM \"id\" element (indicated by '#' in first character)\n<br/><br/>\nTo disable creation of any template (in order to do your own replacements of the template), set this to ''.",
            "example": [
                "\n      paginatorTemplate:  '<div data-pglink=\"first\">FIRST</div> {pageLinks} <div data-pglink=\"last\">LAST</div>',\n      paginatorTemplate:  Y.one('#script-id-tmpl'),\n      paginatorTemplate:  Y.one('#script-id-tmpl').getHTML(),\n      paginatorTemplate:  '#script-id-tmpl',   // where"
            ],
            "itemtype": "attribute",
            "name": "paginatorTemplate",
            "type": "{Node|String}",
            "default": "See TMPL_PAGINATOR static property",
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 1144,
            "description": "Defines the HTML template to be used for each individual page within the Paginator.  This can be used along\nwith replacement tokens to create UI elements for each page link.  The template is used to construct the\n`{pageLinks}` replacement token with the paginator body.\n\nRecognized replacement tokens most appropriate to this attribute are `{page}`, `{pageStartIndex}` and\n`{pageEndIndex}`.\n\nA few examples of this template are listed below;",
            "example": [
                "\n       pageLinkTemplate: '<a href=\"#\" data-pglink=\"{page}\" class=\"\" title=\"Page No. {page}\">{page}</a>'"
            ],
            "itemtype": "attribute",
            "name": "pageLinkTemplate",
            "type": "String",
            "default": "See TMPL_LINK static property",
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 1172,
            "description": "Used to set the maximum number of page links that will be displayed for individual pages within `{pageLinks}`.\nThis is the primary attribute to use to setup **abbreviated page links**, to avoid a long line of page links\nthat travel across the page!\n\nSetting this to some number less than the total number of pages will begin abbreviating the links.\n<br/>(See also attributes [`linkListOffset`](#attr_linkListOffset) and [`pageLinkFiller`](#attr_pageLinkFiller), which work in conjunction with this attribute).",
            "itemtype": "attribute",
            "name": "maxPageLinks",
            "type": "Integer",
            "default": "9999",
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 1189,
            "description": "Setting that represents the number of links adjacent to the current page that should be displayed for instances where\nan *abbreviated* page link list is desired.\n<br/>(See [maxPageLinks](#attr_maxPageLinks) and [pageLinkFiller](#attr_pageLinkFiller) attributes).\n\nFor example, a setting of this attribute to 1, will result in 3 page links (current page plus 1 each side),\n<br/>likewise a setting of 2, will results in 5 page links in the center of the paginator, etc.",
            "itemtype": "attribute",
            "name": "linkListOffset",
            "type": "Integer",
            "default": "1",
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 1206,
            "description": "Setting the the \".. more\" indicator to be used specifically for *abbreviated* page link lists.\n<br/>(See [maxPageLinks](#attr_maxPageLinks) and [linkListOffset](#attr_linkListOffset) attributes).",
            "itemtype": "attribute",
            "name": "pageLinkFiller",
            "type": "String",
            "default": "'...'",
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 1219,
            "description": "Flag to indicate whether the first page link **within the `{pageLinks}` template** is to be displayed or not.\n<br/>Specifically intended for *abbreviated* page link lists (See [maxPageLinks](#attr_maxPageLinks) attribute).\n\nFor Example;\n<br/>If our paginator state currently has 9 pages, and the current page is 5, if `alwaysShowLast:false` and `alwaysShowFirst:false`\n   the link list will resemble;<br/>First | Prev | ... 4 5 6 ... | Next | Last\n\n   Likewise, with `'alwaysShowLast:true` (and alwaysShowFirst:true) the link list will resemble;\n<br/>First | Prev | 1 ... 4 5 6 ... 9 | Next | Last",
            "itemtype": "attribute",
            "name": "alwaysShowFirst",
            "type": "Boolean",
            "default": "false",
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 1239,
            "description": "Flag to indicate whether the last page link **within the `{pageLinks}` template** is to be displayed or not.\n<br/>Specifically intended for *abbreviated* page link lists (See [maxPageLinks](#attr_maxPageLinks) attribute).\n\nSee `alowsShowFirst` for an example.",
            "itemtype": "attribute",
            "name": "alwaysShowLast",
            "type": "Boolean",
            "default": "false",
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 1254,
            "itemtype": "attribute",
            "name": "selectPageFormat",
            "type": "String",
            "default": "'Page {page}'",
            "beta": 1,
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 1266,
            "description": "Flag to indicate if the Paginator container should be re-sized to the DataTable size\nafter rendering is complete.\n\nThis attribute works best with a \"bar\" type of Paginator that is intended to look integral with a DataTable.",
            "itemtype": "attribute",
            "name": "paginatorResize",
            "type": "Boolean",
            "default": "false",
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 1281,
            "description": "Flag indicating whether \"circular\" behavior of the Paginator View is desired.  If `true` the paginator\nwill stop \"disabling\" First|Previous or Next|Last toggling and will continue at either 1st page or last\npage selections.  (i.e. when on *last* page, a *next* click will return to page 1)",
            "itemtype": "attribute",
            "name": "circular",
            "type": "Boolean",
            "default": "false",
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 1295,
            "description": "A reference to the DataTable instance that may be using this paginator-view.  This is used primarily to handle\nresizing the Paginator View after rendering/updating.\n\nNOTE:  This attribute is usually set by other methods (i.e. Y.DataTable.Paginator) and not required to be set\nby the user directly.",
            "itemtype": "attribute",
            "name": "dt",
            "type": "Y.DataTable",
            "default": "null",
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 1313,
            "description": "Fires after the Paginator is resized to match the DataTable size (requires attribute \"paginatorResize:true\")",
            "itemtype": "event",
            "name": "resize",
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 1318,
            "description": "Fires after the DataTable change is reflected AND the Paginator has been completely rendered.",
            "itemtype": "event",
            "name": "render",
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        },
        {
            "file": "js/paginator-view.js",
            "line": 1323,
            "description": "Fires after the _processPageChange method has updated the pagination state.",
            "itemtype": "event",
            "name": "pageChange",
            "params": [
                {
                    "name": "state",
                    "description": "The PaginatorModel `getAttrs()` \"state\" after updating to the current page as an object.",
                    "type": "Object"
                }
            ],
            "since": "3.5.0",
            "class": "Y.PaginatorView",
            "module": "paginator-view"
        }
    ]
}